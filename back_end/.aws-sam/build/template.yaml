AWSTemplateFormatVersion: 2010-09-09
Description: song-filter
Transform:
- AWS::Serverless-2016-10-31
Globals:
  Function:
    Runtime: nodejs12.x
    Timeout: 180
    Environment:
      Variables:
        SONG_BUCKET: sam-app-ihm
        SONG_KEY: songData.json
  Api:
    Cors:
      AllowMethods: '''OPTIONS,POST,GET'''
      AllowHeaders: '''Content-Type'''
      AllowOrigin: '''*'''
Metadata:
  AWS::ServerlessRepo::Application:
    Name: serverless-leaderboard
    Description: Serverless Leaderboard Implementation with Redis
    Author: svenanderson
    SpdxLicenseId: Apache-2.0
    LicenseUrl: ../../LICENSE.txt
    ReadmeUrl: ../../README.md
    Labels:
    - leaderboard
    HomePageUrl: https://github.com/Lambda-Store/serverless-leaderboard
    SemanticVersion: '0.0.1'
    SourceCodeUrl: https://github.com/Lambda-Store/serverless-leaderboard
Resources:
  getAllSongsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/getAllSongs.handler
      Description: The function to retreive all song data.
      Events:
        Api:
          Type: Api
          Properties:
            Path: /
            Method: GET
      CodeUri: getAllSongsFunction
  getSongFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/getSong.handler
      Description: The function to get one song's information.
      Events:
        Api:
          Type: Api
          Properties:
            Path: /song
            Method: POST
      CodeUri: getSongFunction
Outputs:
  WebEndpoint:
    Description: API Gateway endpoint URL for Prod stage
    Value:
      Fn::Sub: https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/
