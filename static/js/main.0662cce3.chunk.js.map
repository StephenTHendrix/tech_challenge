{"version":3,"sources":["_constants/styleContants.js","globalStyles.js","_pages/home/index.js","_pages/song/components/songDetailCard.js","_pages/song/index.js","_images/loading.gif","_components/loader.js","_components/navbar.js","_components/sortArrow.js","_pages/songs/components/TableHeader.js","_pages/songs/components/TableRow.js","_pages/songs/index.js","_routes/index.js","App.js","index.js"],"names":["colors","background","brand","fadedBrand","tableBorder","table","GlobalStyles","createGlobalStyle","Content","styled","div","Buttons","Button","Link","Home","to","StyledSongDetailCard","selected","border","Indicator","DetailText","SongDetailCard","label","onClick","StyledInput","input","disabled","RunQueryContainer","OptionsContainer","Details","ReturnedDetailCard","SelectOneText","Song","songKeys","useState","songName","setSongName","selectedQueryArguments","setSelectedQueryArguments","returnedSongInfo","setReturnedSongInfo","error","setError","userHasInputSong","length","userHasChosenDetails","queryDisabled","formatHeaderCell","value","includes","replace","handleQueryArgumentSelect","useCallback","argument","currentArguments","filter","currentArgument","push","returnedSongInfoIsEmpty","useMemo","Object","keys","songKeyValueMap","map","songKey","songValue","optionsMap","song","returnedDetailsMap","key","placeholder","onChange","event","target","fetch","process","method","headers","body","join","then","response","json","data","getSongInfo","errors","message","StyledLoader","img","Loader","src","loading","StyledNavbar","Logo","LogoText","NavbarLinks","NavbarLink","Navbar","SortArrow","rotate","version","id","xmlns","xmlnsXlink","x","y","width","height","viewBox","xmlSpace","transform","d","StyledTableHeader","TableCell","ColumnName","SortArrowClickContainer","TableHeader","songs","setSongs","sortAndSetSongs","column","orderBy","sortedSongs","sort","a","b","compare","mappedSongKeys","index","StyledTableRow","TableRow","songValues","values","Table","Songs","allSongsData","Routes","basename","exact","path","component","App","setAllSongsData","setSongKeys","useEffect","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0662cce3.chunk.js","sourcesContent":["export const colors = {\n  background: '#f8f3d4',\n  brand: '#00b8a9',\n  fadedBrand: '#f1d7c0',\n  tableBorder: '#c33052',\n  table: '#f6416c',\n};\n","import { createGlobalStyle } from 'styled-components';\n\nimport { colors } from '_constants';\n\nexport const GlobalStyles = createGlobalStyle`\n\n* {\n    box-sizing: border-box;\n}\n\nbody {\n    background-color: ${colors.background};\n    font-family: sans-serif;\n    margin: 0;\n    font-size: 18px;\n    color: #45443b;\n}\n\na {\n    text-decoration: none;\n    color: white;\n}\n    \n    a:visited {\n    text-decoration: none;\n    color: white;\n}\n`;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport { colors } from '_constants';\n\nconst Content = styled.div`\n  position: absolute;\n  top: 40%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: ${colors.brand};\n  color: white;\n  height: 100px;\n  width: 200px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 6px;\n`;\n\nconst Buttons = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: absolute;\n  top: 60%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n\nconst Button = styled(Link)`\n  color: white;\n  height: 75px;\n  width: 150px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 6px;\n  background-color: ${colors.table};\n  margin: 0 5px;\n`;\n\nexport const Home = () => {\n  return (\n    <>\n      <Content>Song Database</Content>\n      <Buttons>\n        <Button to=\"/songs\">See All Songs</Button>\n        <Button to=\"/song\">Get Song Detail</Button>\n      </Buttons>\n    </>\n  );\n};\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { colors } from '_constants';\n\nconst StyledSongDetailCard = styled.div`\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  width: 100%;\n  max-width: 300px;\n  height: 70px;\n  background-color: white;\n  border: 1px solid\n    ${({ selected }) => (selected ? colors.brand : colors.border)};\n  border-radius: 6px;\n  cursor: pointer;\n  margin: 10px;\n`;\n\nconst Indicator = styled.div`\n  height: 20px;\n  width: 20px;\n  border-radius: 50%;\n  border: 1px solid ${colors.border};\n  background-color: ${({ selected }) => (selected ? colors.brand : 'white')};\n`;\n\nconst DetailText = styled.div`\n  text-align: left;\n  width: 80%;\n  text-transform: capitalize;\n`;\n\nexport const SongDetailCard = ({ label, selected, onClick }) => {\n  return (\n    <StyledSongDetailCard selected={selected} onClick={onClick}>\n      <Indicator selected={selected} />\n      <DetailText>{label}</DetailText>\n    </StyledSongDetailCard>\n  );\n};\n","import React, { useState, useCallback, useMemo } from 'react';\nimport styled from 'styled-components';\n\nimport { colors } from '_constants';\nimport { SongDetailCard } from './components/songDetailCard';\n\nconst StyledInput = styled.input`\n  width: 200px;\n  height: 60px;\n  margin: 0 5px;\n  text-align: center;\n  font-size: 14px;\n  border-radius: 6px;\n  border: 1px solid gray;\n  color: #45443b;\n\n  &:focus {\n    outline: none;\n    border: 2px solid ${colors.brand};\n  }\n`;\n\nconst Button = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 200px;\n  height: 60px;\n  background-color: white;\n  ${({ disabled }) => !disabled && 'cursor: pointer'};\n  margin: 0 5px;\n  border: ${({ disabled }) =>\n    disabled ? `2px solid ${colors.table}` : `2px solid ${colors.brand}`};\n  border-radius: 6px;\n`;\n\nconst RunQueryContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 50%;\n  margin: 0 auto 50px;\n`;\n\nconst OptionsContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  margin-bottom: 50px;\n`;\n\nconst Details = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin: 0 auto;\n  background-color: ${colors.table};\n  border-radius: 8px;\n  width: 40%;\n  padding: 10px;\n  color: white;\n`;\n\nconst ReturnedDetailCard = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 20px;\n  margin: 10px 0;\n  background-color: white;\n  border: 1px solid gray;\n  border-radius: 8px;\n  text-transform: capitalize;\n  width: 50%;\n  color: #45443b;\n`;\n\nconst SelectOneText = styled.div`\n  text-align: center;\n`;\n\nexport const Song = ({ songKeys }) => {\n  const [songName, setSongName] = useState('');\n  const [selectedQueryArguments, setSelectedQueryArguments] = useState([]);\n  const [returnedSongInfo, setReturnedSongInfo] = useState({});\n  const [error, setError] = useState('');\n\n  const userHasInputSong = songName.length > 0;\n  const userHasChosenDetails = selectedQueryArguments.length > 0;\n  const queryDisabled = !userHasInputSong || !userHasChosenDetails;\n\n  const formatHeaderCell = (value) => {\n    if (value.includes('metric')) {\n      return value.replace('metric', 'Metric ');\n    } else if (value === 'playCount') {\n      return 'Play Count';\n    } else if (value === 'songReleaseDate') {\n      return 'Song Release Date';\n    }\n\n    return value;\n  };\n\n  const handleQueryArgumentSelect = useCallback(\n    (argument) => {\n      let currentArguments = [...selectedQueryArguments];\n\n      if (currentArguments.includes(argument)) {\n        currentArguments = currentArguments.filter(\n          (currentArgument) => currentArgument !== argument\n        );\n      } else {\n        currentArguments.push(argument);\n      }\n      setSelectedQueryArguments(currentArguments);\n    },\n    [selectedQueryArguments]\n  );\n\n  const returnedSongInfoIsEmpty = useMemo(() => {\n    return Object.keys(returnedSongInfo).length === 0;\n  }, [returnedSongInfo]);\n\n  const songKeyValueMap = useMemo(() => {\n    return songKeys.map((songKey) => ({\n      songKey,\n      songValue: formatHeaderCell(songKey),\n    }));\n  }, [songKeys]);\n\n  const optionsMap = useMemo(() => {\n    return songKeyValueMap.map((song) => (\n      <SongDetailCard\n        key={song.songKey}\n        label={song.songValue}\n        onClick={() => handleQueryArgumentSelect(song.songKey)}\n        selected={selectedQueryArguments.includes(song.songKey)}\n      />\n    ));\n  }, [handleQueryArgumentSelect, selectedQueryArguments, songKeyValueMap]);\n\n  const returnedDetailsMap = useMemo(() => {\n    return Object.keys(returnedSongInfo).map((key) => (\n      <ReturnedDetailCard key={key}>\n        {formatHeaderCell(key)}: {returnedSongInfo[key]}\n      </ReturnedDetailCard>\n    ));\n  }, [returnedSongInfo]);\n\n  const getSongDetail = () => {\n    if (queryDisabled) {\n      return;\n    }\n    fetch(process.env.REACT_APP_GET_SONG_URL, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: `\n      {getSongInfo(song: \"${songName}\") {${selectedQueryArguments.join(',')}}}`,\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        if (data?.data?.getSongInfo) {\n          setReturnedSongInfo(data?.data?.getSongInfo || data?.errors[0]);\n          setError('');\n        } else {\n          setReturnedSongInfo({});\n          setError(data?.errors[0]?.message);\n        }\n      });\n  };\n\n  return (\n    <>\n      <RunQueryContainer>\n        <StyledInput\n          placeholder=\"Enter Song Name (Required)\"\n          onChange={(event) => setSongName(event.target.value)}\n        />\n        <Button onClick={getSongDetail} disabled={queryDisabled}>\n          Get Song Detail\n        </Button>\n      </RunQueryContainer>\n      <SelectOneText>\n        What would you like to know? Select at least one. (Required)\n      </SelectOneText>\n      <OptionsContainer>{optionsMap}</OptionsContainer>\n      {(!returnedSongInfoIsEmpty || error) && (\n        <Details>\n          {error\n            ? 'Something went wrong. Try a different song name.'\n            : returnedDetailsMap}\n        </Details>\n      )}\n    </>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/loading.89906e12.gif\";","import React from 'react';\nimport styled from 'styled-components';\n\nimport loading from '_images/loading.gif';\n\nconst StyledLoader = styled.img`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n\nexport const Loader = () => {\n  return <StyledLoader src={loading} />;\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport { colors } from '_constants';\n\nconst StyledNavbar = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0 50px;\n  margin-bottom: 100px;\n  background-color: ${colors.brand};\n  height: 75px;\n`;\n\nconst Logo = styled.div`\n  display: flex;\n  align-items: center;\n  color: white;\n  font-size: 36px;\n`;\n\nconst LogoText = styled.div`\n  font-size: 24px;\n  margin-left: 10px;\n`;\n\nconst NavbarLinks = styled.div``;\n\nconst NavbarLink = styled(Link)`\n  margin: 0 5px;\n`;\n\nexport const Navbar = () => {\n  return (\n    <StyledNavbar>\n      <Logo>\n        ♫<LogoText>Song Database</LogoText>\n      </Logo>\n      <NavbarLinks>\n        <NavbarLink to=\"/\">Home</NavbarLink>\n        <NavbarLink to=\"/song\">Song</NavbarLink>\n        <NavbarLink to=\"/songs\">Songs</NavbarLink>\n      </NavbarLinks>\n    </StyledNavbar>\n  );\n};\n","import React from 'react';\n\nexport const SortArrow = ({ rotate }) => {\n  return (\n    <svg\n      version=\"1.1\"\n      id=\"Capa_1\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n      x=\"0px\"\n      y=\"0px\"\n      width=\"10px\"\n      height=\"10px\"\n      viewBox=\"0 0 284.929 284.929\"\n      xmlSpace=\"preserve\"\n      transform={rotate && 'rotate(180)'}\n    >\n      <g>\n        <path\n          d=\"M282.082,76.511l-14.274-14.273c-1.902-1.906-4.093-2.856-6.57-2.856c-2.471,0-4.661,0.95-6.563,2.856L142.466,174.441\n\t\tL30.262,62.241c-1.903-1.906-4.093-2.856-6.567-2.856c-2.475,0-4.665,0.95-6.567,2.856L2.856,76.515C0.95,78.417,0,80.607,0,83.082\n\t\tc0,2.473,0.953,4.663,2.856,6.565l133.043,133.046c1.902,1.903,4.093,2.854,6.567,2.854s4.661-0.951,6.562-2.854L282.082,89.647\n\t\tc1.902-1.903,2.847-4.093,2.847-6.565C284.929,80.607,283.984,78.417,282.082,76.511z\"\n        />\n      </g>\n    </svg>\n  );\n};\n","import React, { useEffect, useMemo } from 'react';\nimport styled from 'styled-components';\n\nimport { SortArrow } from '_components';\nimport { colors } from '_constants';\n\nconst StyledTableHeader = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n`;\n\nconst TableCell = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  border-bottom: 2px solid ${colors.tableBorder};\n  padding: 20px;\n  min-width: 225px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  color: white;\n  background-color: ${colors.table};\n`;\n\nconst ColumnName = styled.div`\n  margin-right: auto;\n  text-transform: capitalize;\n`;\n\nconst SortArrowClickContainer = styled.div`\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 0 5px;\n`;\n\nconst formatHeaderCell = (value) => {\n  if (value.includes('metric')) {\n    return value.replace('metric', 'Metric ');\n  } else if (value === 'playCount') {\n    return 'Play Count';\n  } else if (value === 'songReleaseDate') {\n    return 'Song Release Date';\n  }\n\n  return value;\n};\n\nexport const TableHeader = ({ songs, setSongs, songKeys }) => {\n  const compare = (column, orderBy) => {\n    return (a, b) => {\n      if (a[column] < b[column]) {\n        return orderBy === 'descending' ? 1 : -1;\n      }\n      if (a[column] > b[column]) {\n        return orderBy === 'descending' ? -1 : 1;\n      }\n      return 0;\n    };\n  };\n\n  const sortAndSetSongs = (column, orderBy) => {\n    const sortedSongs = [...songs].sort(compare(column, orderBy));\n    setSongs((songs) => sortedSongs);\n  };\n\n  const formatHeaderCell = (value) => {\n    if (value.includes('metric')) {\n      return value.replace('metric', 'Metric ');\n    } else if (value === 'playCount') {\n      return 'Play Count';\n    } else if (value === 'songReleaseDate') {\n      return 'Song Release Date';\n    }\n\n    return value;\n  };\n\n  const map = useMemo(() => {\n    const mappedSongKeys = {};\n    songKeys?.map(\n      (songKey) => (mappedSongKeys[songKey] = formatHeaderCell(songKey))\n    );\n    return mappedSongKeys;\n  }, [songKeys]);\n\n  return (\n    <StyledTableHeader>\n      {songKeys.map((songKey, index) => (\n        <TableCell key={songKey + '-' + index}>\n          <ColumnName>{map[songKey]}</ColumnName>\n          <SortArrowClickContainer\n            onClick={() => sortAndSetSongs(songKey, 'ascending')}\n          >\n            <SortArrow />\n          </SortArrowClickContainer>\n          <SortArrowClickContainer\n            onClick={() => sortAndSetSongs(songKey, 'descending')}\n          >\n            <SortArrow rotate />\n          </SortArrowClickContainer>\n        </TableCell>\n      ))}\n    </StyledTableHeader>\n  );\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { colors } from '_constants';\n\nconst StyledTableRow = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n`;\n\nconst TableCell = styled.div`\n  display: inline-block;\n  border-bottom: 2px solid ${colors.tableBorder};\n  padding: 40px 20px;\n  min-width: 225px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  background-color: ${colors.fadedBrand};\n`;\n\nexport const TableRow = ({ song }) => {\n  const songValues = Object.values(song);\n\n  return (\n    <StyledTableRow>\n      {songValues.map((songValue, index) => (\n        <TableCell key={songValue + '-' + index}>{songValue}</TableCell>\n      ))}\n    </StyledTableRow>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\n\nimport { Loader } from '_components';\nimport { colors } from '_constants';\nimport { TableHeader, TableRow } from './components';\n\nconst Table = styled.div`\n  margin: 0 50px 50px;\n  border: 1px solid #c33052;\n  overflow: scroll;\n  border-radius: 16px;\n`;\n\nexport const Songs = ({ allSongsData, songKeys }) => {\n  const [songs, setSongs] = useState(allSongsData);\n\n  return (\n    <>\n      {songs.length ? (\n        <Table>\n          <TableHeader songs={songs} setSongs={setSongs} songKeys={songKeys} />\n          {songs.map((song, index) => (\n            <TableRow song={song} key={song.song + '-' + index} />\n          ))}\n        </Table>\n      ) : (\n        <Loader />\n      )}\n    </>\n  );\n};\n","import React from 'react';\nimport {\n  Switch,\n  Redirect,\n  Route,\n  HashRouter as Router,\n} from 'react-router-dom';\n\nimport { GlobalStyles } from '../globalStyles';\nimport { Home, Song, Songs } from '_pages';\nimport { Navbar } from '_components';\n\nexport const Routes = ({ allSongsData, songKeys }) => {\n  return (\n    <>\n      <GlobalStyles />\n      <Router basename=\"/\">\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route\n            exact\n            path=\"/song\"\n            component={() => <Song songKeys={songKeys} />}\n          />\n          <Route\n            exact\n            path=\"/songs\"\n            component={() => (\n              <Songs allSongsData={allSongsData} songKeys={songKeys} />\n            )}\n          />\n          <Redirect to=\"/\" />\n        </Switch>\n      </Router>\n    </>\n  );\n};\n","import React, { useEffect, useState, useMemo } from 'react';\nimport { Routes } from '_routes';\n\nexport const App = () => {\n  const [allSongsData, setAllSongsData] = useState([]);\n  const [songKeys, setSongKeys] = useState([]);\n\n  useEffect(() => {\n    fetch(process.env.REACT_APP_GET_ALL_SONGS_URL)\n      .then((response) => response.json())\n      .then((data) => {\n        setAllSongsData(data);\n        setSongKeys(Object.keys(data[0]));\n      });\n  }, []);\n\n  return <Routes allSongsData={allSongsData} songKeys={songKeys} />;\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}