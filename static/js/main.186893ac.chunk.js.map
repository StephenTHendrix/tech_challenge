{"version":3,"sources":["_constants/styleContants.js","globalStyles.js","_pages/home/index.js","_pages/song/components/songAttributeCard.js","_pages/song/index.js","_images/loading.gif","_components/loader.js","_components/navbar.js","_components/sortArrow.js","_pages/songs/components/TableHeader.js","_pages/songs/components/TableRow.js","_pages/songs/index.js","_routes/index.js","App.js","index.js"],"names":["colors","background","brand","fadedBrand","brandBorder","table","GlobalStyles","createGlobalStyle","Content","styled","div","Button","Link","Home","to","AnswerCard","selected","border","Indicator","AnswerText","SongAttributeCard","label","onClick","StyledInput","input","RunQueryContainer","OptionsContainer","Details","Song","allSongsData","useState","songs","songName","setSongName","selectedQueryArguments","setSelectedQueryArguments","returnedSongInfo","setReturnedSongInfo","songKeys","Object","keys","formatHeaderCell","value","includes","replace","map","useMemo","songKey","songValue","placeholder","onChange","event","target","fetch","process","method","headers","body","join","then","response","json","data","getSongInfo","song","argument","currentArguments","filter","currentArgument","push","handleQueryArgumentSelect","key","StyledLoader","img","Loader","src","loading","StyledNavbar","Logo","LogoText","NavbarLinks","NavbarLink","Navbar","SortArrow","rotate","version","id","xmlns","xmlnsXlink","x","y","width","height","viewBox","xmlSpace","transform","d","StyledTableHeader","TableCell","ColumnName","SortArrowClickContainer","TableHeader","setSongs","sortAndSetSongs","column","orderBy","sortedSongs","sort","a","b","compare","mappedSongKeys","index","StyledTableRow","TableRow","songValues","values","Table","Songs","length","Routes","exact","path","component","App","setAllSongsData","useEffect","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.186893ac.chunk.js","sourcesContent":["export const colors = {\n  background: '#f8f3d4',\n  brand: '#00b8a9',\n  fadedBrand: '#f1d7c0',\n  brandBorder: '#c33052',\n  table: '#f6416c',\n};\n","import { createGlobalStyle } from 'styled-components';\n\nimport { colors } from '_constants';\n\nexport const GlobalStyles = createGlobalStyle`\n\n* {\n    box-sizing: border-box;\n}\n\nbody {\n    background-color: ${colors.background};\n    font-family: sans-serif;\n    margin: 0;\n    font-size: 18px;\n    color: #45443b;\n}\n\na {\n    text-decoration: none;\n    color: white;\n}\n    \n    a:visited {\n    text-decoration: none;\n    color: white;\n}\n`;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport { colors } from '_constants';\n\nconst Content = styled.div`\n  position: absolute;\n  top: 40%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: ${colors.brand};\n  color: white;\n  height: 100px;\n  width: 200px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Button = styled(Link)`\n  position: absolute;\n  top: 60%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: ${colors.table};\n  color: white;\n  height: 75px;\n  width: 150px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Home = () => {\n  return (\n    <>\n      <Content>Song Database</Content>\n      <Button to=\"/songs\">Get Started</Button>\n    </>\n  );\n};\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { colors } from '_constants';\n\nconst AnswerCard = styled.div`\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  width: 100%;\n  max-width: 300px;\n  height: 70px;\n  background-color: white;\n  border: 1px solid\n    ${({ selected }) => (selected ? colors.brand : colors.border)};\n  border-radius: 6px;\n  cursor: pointer;\n  margin: 10px;\n`;\n\nconst Indicator = styled.div`\n  height: 20px;\n  width: 20px;\n  border-radius: 50%;\n  border: 1px solid ${colors.border};\n  background-color: ${({ selected }) => (selected ? colors.brand : 'white')};\n`;\n\nconst AnswerText = styled.div`\n  text-align: left;\n  width: 80%;\n  text-transform: capitalize;\n`;\n\nexport const SongAttributeCard = ({ label, selected, onClick }) => {\n  return (\n    <AnswerCard selected={selected} onClick={onClick}>\n      <Indicator selected={selected} />\n      <AnswerText>{label}</AnswerText>\n    </AnswerCard>\n  );\n};\n","import React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport styled from 'styled-components';\n\nimport { colors } from '_constants';\nimport { SongAttributeCard } from './components/songAttributeCard';\n\nconst Content = styled.div`\n  position: absolute;\n  top: 40%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: ${colors.table};\n  color: white;\n  height: 100px;\n  width: 200px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst StyledInput = styled.input`\n  width: 200px;\n  height: 60px;\n  margin: 0 5px;\n  text-align: center;\n`;\n\nconst Button = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 200px;\n  height: 60px;\n  background-color: white;\n  cursor: pointer;\n  margin: 0 5px;\n  border: 1px solid gray;\n`;\n\nconst RunQueryContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 50%;\n  margin: 0 auto 50px;\n`;\n\nconst OptionsContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  margin-bottom: 50px;\n`;\n\nconst Details = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 50%;\n  margin: 0 auto;\n`;\n\nexport const Song = ({ allSongsData }) => {\n  const [songs, setSongs] = useState(allSongsData);\n  const [songName, setSongName] = useState('');\n  const [selectedQueryArguments, setSelectedQueryArguments] = useState([]);\n  const [returnedSongInfo, setReturnedSongInfo] = useState({});\n\n  const songKeys = Object.keys(songs?.[0] || []);\n\n  const formatHeaderCell = (value) => {\n    if (value.includes('metric')) {\n      return value.replace('metric', 'Metric ');\n    } else if (value === 'playCount') {\n      return 'Play Count';\n    } else if (value === 'songReleaseDate') {\n      return 'Song Release Date';\n    }\n\n    return value;\n  };\n\n  const map = useMemo(() => {\n    return songKeys.map((songKey) => ({\n      songKey,\n      songValue: formatHeaderCell(songKey),\n    }));\n  }, [songKeys]);\n\n  const runQuery = () => {\n    fetch(process.env.REACT_APP_GET_SONG_URL, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: `\n      {getSongInfo(song: \"${songName}\") {${selectedQueryArguments.join(',')}}}`,\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        setReturnedSongInfo(data.data.getSongInfo);\n      });\n  };\n\n  const handleQueryArgumentSelect = (argument) => {\n    let currentArguments = [...selectedQueryArguments];\n\n    if (currentArguments.includes(argument)) {\n      currentArguments = currentArguments.filter(\n        (currentArgument) => currentArgument !== argument\n      );\n    } else {\n      currentArguments.push(argument);\n    }\n    setSelectedQueryArguments(currentArguments);\n  };\n\n  return (\n    <>\n      <RunQueryContainer>\n        <StyledInput\n          placeholder=\"Enter Song Name\"\n          onChange={(event) => setSongName(event.target.value)}\n        />\n        <Button onClick={runQuery}>Get Song Detail</Button>\n      </RunQueryContainer>\n      <OptionsContainer>\n        {map.map((song) => (\n          <SongAttributeCard\n            key={song.songKey}\n            label={song.songValue}\n            onClick={() => handleQueryArgumentSelect(song.songKey)}\n            selected={selectedQueryArguments.includes(song.songKey)}\n          />\n        ))}\n      </OptionsContainer>\n      <Details>\n        {Object.keys(returnedSongInfo).map((key) => (\n          <div key={key}>\n            {formatHeaderCell(key)}: {returnedSongInfo[key]}\n          </div>\n        ))}\n      </Details>\n    </>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/loading.89906e12.gif\";","import React from 'react';\nimport styled from 'styled-components';\n\nimport loading from '_images/loading.gif';\n\nconst StyledLoader = styled.img`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\n\nexport const Loader = () => {\n  return <StyledLoader src={loading} />;\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport { colors } from '_constants';\n\nconst StyledNavbar = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0 50px;\n  margin-bottom: 100px;\n  background-color: ${colors.brand};\n  height: 75px;\n`;\n\nconst Logo = styled.div`\n  display: flex;\n  align-items: center;\n  color: white;\n  font-size: 36px;\n`;\n\nconst LogoText = styled.div`\n  font-size: 24px;\n  margin-left: 10px;\n`;\n\nconst NavbarLinks = styled.div``;\n\nconst NavbarLink = styled(Link)`\n  margin: 0 5px;\n`;\n\nexport const Navbar = () => {\n  return (\n    <StyledNavbar>\n      <Logo>\n        ♫<LogoText>Song Database</LogoText>\n      </Logo>\n      <NavbarLinks>\n        <NavbarLink to=\"/\">Home</NavbarLink>\n        <NavbarLink to=\"/song\">Song</NavbarLink>\n        <NavbarLink to=\"/songs\">Songs</NavbarLink>\n      </NavbarLinks>\n    </StyledNavbar>\n  );\n};\n","import React from 'react';\n\nexport const SortArrow = ({ rotate }) => {\n  return (\n    <svg\n      version=\"1.1\"\n      id=\"Capa_1\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      xmlnsXlink=\"http://www.w3.org/1999/xlink\"\n      x=\"0px\"\n      y=\"0px\"\n      width=\"10px\"\n      height=\"10px\"\n      viewBox=\"0 0 284.929 284.929\"\n      xmlSpace=\"preserve\"\n      transform={rotate && 'rotate(180)'}\n    >\n      <g>\n        <path\n          d=\"M282.082,76.511l-14.274-14.273c-1.902-1.906-4.093-2.856-6.57-2.856c-2.471,0-4.661,0.95-6.563,2.856L142.466,174.441\n\t\tL30.262,62.241c-1.903-1.906-4.093-2.856-6.567-2.856c-2.475,0-4.665,0.95-6.567,2.856L2.856,76.515C0.95,78.417,0,80.607,0,83.082\n\t\tc0,2.473,0.953,4.663,2.856,6.565l133.043,133.046c1.902,1.903,4.093,2.854,6.567,2.854s4.661-0.951,6.562-2.854L282.082,89.647\n\t\tc1.902-1.903,2.847-4.093,2.847-6.565C284.929,80.607,283.984,78.417,282.082,76.511z\"\n        />\n      </g>\n    </svg>\n  );\n};\n","import React, { useMemo } from 'react';\nimport styled from 'styled-components';\n\nimport { SortArrow } from '_components';\nimport { colors } from '_constants';\n\nconst StyledTableHeader = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n`;\n\nconst TableCell = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  border-bottom: 2px solid ${colors.brandBorder};\n  padding: 20px;\n  min-width: 225px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  color: white;\n  background-color: ${colors.table};\n`;\n\nconst ColumnName = styled.div`\n  margin-right: auto;\n  text-transform: capitalize;\n`;\n\nconst SortArrowClickContainer = styled.div`\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 0 5px;\n`;\n\nconst formatHeaderCell = (value) => {\n  if (value.includes('metric')) {\n    return value.replace('metric', 'Metric ');\n  } else if (value === 'playCount') {\n    return 'Play Count';\n  } else if (value === 'songReleaseDate') {\n    return 'Song Release Date';\n  }\n\n  return value;\n};\n\nexport const TableHeader = ({ songs, setSongs }) => {\n  const songKeys = Object.keys(songs[0]);\n\n  const compare = (column, orderBy) => {\n    return (a, b) => {\n      if (a[column] < b[column]) {\n        return orderBy === 'descending' ? 1 : -1;\n      }\n      if (a[column] > b[column]) {\n        return orderBy === 'descending' ? -1 : 1;\n      }\n      return 0;\n    };\n  };\n\n  const sortAndSetSongs = (column, orderBy) => {\n    const sortedSongs = [...songs].sort(compare(column, orderBy));\n    setSongs((songs) => sortedSongs);\n  };\n\n  const map = useMemo(() => {\n    const mappedSongKeys = {};\n    songKeys.map(\n      (songKey) => (mappedSongKeys[songKey] = formatHeaderCell(songKey))\n    );\n    return mappedSongKeys;\n  }, [songKeys]);\n\n  return (\n    <StyledTableHeader>\n      {songKeys.map((songKey, index) => (\n        <TableCell key={songKey + '-' + index}>\n          <ColumnName>{map[songKey]}</ColumnName>\n          <SortArrowClickContainer\n            onClick={() => sortAndSetSongs(songKey, 'ascending')}\n          >\n            <SortArrow />\n          </SortArrowClickContainer>\n          <SortArrowClickContainer\n            onClick={() => sortAndSetSongs(songKey, 'descending')}\n          >\n            <SortArrow rotate />\n          </SortArrowClickContainer>\n        </TableCell>\n      ))}\n    </StyledTableHeader>\n  );\n};\n","import React from 'react';\nimport styled from 'styled-components';\nimport { colors } from '_constants';\n\nconst StyledTableRow = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n`;\n\nconst TableCell = styled.div`\n  display: inline-block;\n  border-bottom: 2px solid ${colors.brandBorder};\n  padding: 40px 20px;\n  min-width: 225px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  background-color: ${colors.fadedBrand};\n`;\n\nexport const TableRow = ({ song }) => {\n  const songValues = Object.values(song);\n\n  return (\n    <StyledTableRow>\n      {songValues.map((songValue, index) => (\n        <TableCell key={songValue + '-' + index}>{songValue}</TableCell>\n      ))}\n    </StyledTableRow>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\n\nimport { Loader } from '_components';\nimport { colors } from '_constants';\nimport { TableHeader, TableRow } from './components';\n\nconst Table = styled.div`\n  margin: 0 50px 50px;\n  border: 1px solid #c33052;\n  overflow: scroll;\n  border-radius: 16px;\n`;\n\nexport const Songs = ({ allSongsData }) => {\n  const [songs, setSongs] = useState(allSongsData);\n\n  return (\n    <>\n      {songs.length ? (\n        <Table>\n          <TableHeader songs={songs} setSongs={setSongs} />\n          {songs.map((song, index) => (\n            <TableRow song={song} key={song.song + '-' + index} />\n          ))}\n        </Table>\n      ) : (\n        <Loader />\n      )}\n    </>\n  );\n};\n","import React from 'react';\nimport {\n  Switch,\n  Redirect,\n  Route,\n  BrowserRouter as Router,\n} from 'react-router-dom';\n\nimport { GlobalStyles } from '../globalStyles';\nimport { Home, Song, Songs } from '_pages';\nimport { Navbar } from '_components';\n\nexport const Routes = ({ allSongsData }) => {\n  return (\n    <>\n      <GlobalStyles />\n      <Router>\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route\n            exact\n            path=\"/song\"\n            component={() => <Song allSongsData={allSongsData} />}\n          />\n          <Route\n            exact\n            path=\"/songs\"\n            component={() => <Songs allSongsData={allSongsData} />}\n          />\n          <Redirect to=\"/\" />\n        </Switch>\n      </Router>\n    </>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Routes } from '_routes';\n\nexport const App = () => {\n  const [allSongsData, setAllSongsData] = useState([]);\n  useEffect(() => {\n    fetch(process.env.REACT_APP_GET_ALL_SONGS_URL)\n      .then((response) => response.json())\n      .then((data) => {\n        setAllSongsData(data);\n      });\n  }, []);\n\n  return <Routes allSongsData={allSongsData} />;\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}